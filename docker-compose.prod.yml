version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: orbit-postgres-prod
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}"]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1'

  liquibase:
    image: liquibase/liquibase
    entrypoint: /liquibase/changelog/docker-entrypoint.sh
    volumes:
      - ./migrations:/liquibase/changelog
    environment:
      LIQUIBASE_COMMAND_URL: jdbc:postgresql://postgres:5432/${DB_DATABASE}
      LIQUIBASE_COMMAND_USERNAME: ${DB_USERNAME}
      LIQUIBASE_COMMAND_PASSWORD: ${DB_PASSWORD}
      LIQUIBASE_COMMAND_CHANGELOG_FILE: changelog.sql
      LIQUIBASE_SEARCH_PATH: /liquibase/changelog
    depends_on:
      postgres:
        condition: service_healthy

  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: orbit-app-prod
    ports:
      - "${PORT:-3000}:3000"
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
      - JWT_SECRET=${JWT_SECRET}
      - CORS_ORIGIN=${CORS_ORIGIN}
      - PORT=3000
    depends_on:
      postgres:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
      restart_policy:
        condition: on-failure
        max_attempts: 3

volumes:
  postgres_data:
    name: orbit_postgres_data_prod
